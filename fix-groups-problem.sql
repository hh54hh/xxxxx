-- ============================================================
-- ุณูุฑุจุช ุฅุตูุงุญ ูุดููุฉ ุงูุฃูุธูุฉ (ุงูุจุฑุงูุฌ ุงูุชุฏุฑูุจูุฉ ูุงูุฃูุธูุฉ ุงูุบุฐุงุฆูุฉ)
-- Fix Groups Problem - Complete SQL Script
-- ============================================================

-- ุชูุนูู UUID extension
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- ============================================================
-- 1. ุฅูุดุงุก ุฌุฏูู ุงููุฌููุนุงุช (Groups Table)
-- ============================================================

CREATE TABLE IF NOT EXISTS groups (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    subscriber_id UUID NOT NULL REFERENCES subscribers(id) ON DELETE CASCADE,
    type VARCHAR(10) NOT NULL CHECK (type IN ('course', 'diet')),
    title VARCHAR(255),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- ============================================================
-- 2. ุฅูุดุงุก ุฌุฏูู ุนูุงุตุฑ ุงููุฌููุนุงุช (Group Items Table)
-- ============================================================

CREATE TABLE IF NOT EXISTS group_items (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    group_id UUID NOT NULL REFERENCES groups(id) ON DELETE CASCADE,
    item_id UUID NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- ============================================================
-- 3. ุฅุถุงูุฉ ุงูุฃุนูุฏุฉ ุงูููููุฏุฉ ูู ุงูุฌุฏุงูู ุงูููุฌูุฏุฉ
-- ============================================================

-- ุฅุถุงูุฉ ุนููุฏ subscription_date ุฅุฐุง ูู ููู ููุฌูุฏุงู
ALTER TABLE subscribers ADD COLUMN IF NOT EXISTS subscription_date DATE DEFAULT CURRENT_DATE;

-- ุฅุถุงูุฉ ุนููุฏ stock ููููุชุฌุงุช ุฅุฐุง ูู ูู๏ฟฝ๏ฟฝ ููุฌูุฏุงู
ALTER TABLE products ADD COLUMN IF NOT EXISTS stock INTEGER NOT NULL DEFAULT 0 CHECK (stock >= 0);

-- ุฅูุดุงุก ุฌุฏูู sale_items ุฅุฐุง ูู ููู ููุฌูุฏุงู
CREATE TABLE IF NOT EXISTS sale_items (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    sale_id UUID NOT NULL REFERENCES sales(id) ON DELETE CASCADE,
    product_id UUID NOT NULL REFERENCES products(id) ON DELETE RESTRICT,
    quantity INTEGER NOT NULL CHECK (quantity > 0),
    unit_price DECIMAL(10,2) NOT NULL CHECK (unit_price >= 0),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- ============================================================
-- 4. ุฅูุดุงุก ุงูููุงุฑุณ ูุชุญุณูู ุงูุฃุฏุงุก
-- ============================================================

-- ููุงุฑุณ ุฌุฏูู ุงููุฌููุนุงุช
CREATE INDEX IF NOT EXISTS idx_groups_subscriber_id ON groups(subscriber_id);
CREATE INDEX IF NOT EXISTS idx_groups_type ON groups(type);
CREATE INDEX IF NOT EXISTS idx_groups_created_at ON groups(created_at);

-- ููุงุฑุณ ุฌุฏูู ุนูุงุตุฑ ุงููุฌููุนุงุช
CREATE INDEX IF NOT EXISTS idx_group_items_group_id ON group_items(group_id);
CREATE INDEX IF NOT EXISTS idx_group_items_item_id ON group_items(item_id);

-- ููุงุฑุณ ุฌุฏูู ุงููุจูุนุงุช
CREATE INDEX IF NOT EXISTS idx_sale_items_sale_id ON sale_items(sale_id);
CREATE INDEX IF NOT EXISTS idx_sale_items_product_id ON sale_items(product_id);

-- ============================================================
-- 5. ุฅูุดุงุก ุงูุฏูุงู ุงููุณุงุนุฏุฉ
-- ============================================================

-- ุฏุงูุฉ ๏ฟฝ๏ฟฝุญุฏูุซ updated_at ุชููุงุฆูุงู
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ language 'plpgsql';

-- ุฏุงูุฉ ุชุญุฏูุซ ุงููุฎุฒูู ุนูุฏ ุงูุจูุน
CREATE OR REPLACE FUNCTION update_product_stock(
    product_id UUID,
    quantity_sold INTEGER
) RETURNS VOID AS $$
BEGIN
    UPDATE products 
    SET stock = stock - quantity_sold,
        updated_at = NOW()
    WHERE id = product_id AND stock >= quantity_sold;
    
    IF NOT FOUND THEN
        RAISE EXCEPTION 'ูุง ููุฌุฏ ูุฎุฒูู ูุงูู ููููุชุฌ ุฃู ุงูููุชุฌ ุบูุฑ ููุฌูุฏ';
    END IF;
END;
$$ LANGUAGE plpgsql;

-- ============================================================
-- 6. ุฅูุดุงุก ุงููุญูุฒุงุช (Triggers)
-- ============================================================

-- ูุญูุฒ ุชุญุฏูุซ updated_at ูููุฌููุนุงุช
DROP TRIGGER IF EXISTS update_groups_updated_at ON groups;
CREATE TRIGGER update_groups_updated_at 
    BEFORE UPDATE ON groups 
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- ูุญูุฒ ุชุญุฏูุซ updated_at ููููุชุฌุงุช (ุฅุฐุง ูู ููู ููุฌูุฏุงู)
DROP TRIGGER IF EXISTS update_products_updated_at ON products;
CREATE TRIGGER update_products_updated_at 
    BEFORE UPDATE ON products 
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- ูุญูุฒ ุชุญุฏูุซ updated_at ูููุดุชุฑููู (ุฅุฐุง ูู ููู ููุฌูุฏุงู)
DROP TRIGGER IF EXISTS update_subscribers_updated_at ON subscribers;
CREATE TRIGGER update_subscribers_updated_at 
    BEFORE UPDATE ON subscribers 
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- ============================================================
-- 7. ุฅุฏุฑุงุฌ ุจูุงูุงุช ุชุฌุฑูุจูุฉ (ุงุฎุชูุงุฑู)
-- ============================================================

-- ุฅุฏุฑุงุฌ ููุงุท ุงูุชูุงุฑูู ุฅุฐุง ูู ุชูู ููุฌูุฏุฉ
INSERT INTO course_points (name, description) VALUES
    ('ุชูุฑูู ุงูุถุบุท', '3 ูุฌููุนุงุช ร 15 ุนุฏุฉ'),
    ('ุชูุฑูู ุงูุนููุฉ', '3 ูุฌููุนุงุช ร 10 ุนุฏุงุช'),
    ('ุชูุฑูู ุงููุฑูุตุงุก', '3 ูุฌููุนุงุช ร 20 ุนุฏุฉ'),
    ('ุชูุฑูู ุงูุจุทู', '3 ูุฌููุนุงุช ร 25 ุนุฏุฉ'),
    ('ุชูุฑูู ุงูุฌุฑู', '30 ุฏูููุฉ ูุชูุงุตูุฉ'),
    ('ุชูุฑูู ุงูุฃูุฒุงู', 'ุชูุงุฑูู ุงูุฃูุฒุงู ุงูุญุฑุฉ'),
    ('ุชูุฑูู ุงููุงุฑุฏูู', 'ุชูุงุฑูู ุงูููุจ ูุงูุฃูุนูุฉ ุงูุฏูููุฉ'),
    ('ุชูุฑูู ุงูููุงููุฉ', 'ุชูุงุฑูู ุจูุงุก ุงูุนุถูุงุช')
ON CONFLICT (name) DO NOTHING;

-- ุฅุฏุฑุงุฌ ุนูุงุตุฑ ุงููุธุงู ุงูุบุฐุงุฆู ุฅุฐุง ูู ุชูู ููุฌูุฏุฉ
INSERT INTO diet_items (name, description) VALUES
    ('ุจุฑูุชูู ูุณุญูู', '30 ุฌุฑุงู ุจุนุฏ ุงูุชูุฑูู ูุน ุงููุงุก'),
    ('ุตุฏุฑ ุฏุฌุงุฌ ูุดูู', '200 ุฌุฑุงู ูุน ุงูุบุฏุงุก'),
    ('ุงูุจูุถ ุงููุณููู', '3 ุจูุถุงุช ูู ุงูุฅูุทุงุฑ'),
    ('ุงูุดููุงู', '50 ุฌุฑุงู ูุน ุงูุญููุจ ูู ุงูุฅูุทุงุฑ'),
    ('ุงูุฃุฑุฒ ุงูุจูู', '150 ุฌุฑุงู ูุน ุงูุบุฏุงุก'),
    ('ุงูุณูููู ุงููุดูู', '150 ุฌุฑุงู ูุน ุงูุนุดุงุก'),
    ('ุงูุฎุถุฑูุงุช ุงููุฑููุฉ', 'ุณูุทุฉ ุฎุถุฑุงุก ูุน ูู ูุฌุจุฉ'),
    ('ุงูููุณุฑุงุช ุงูุทุจูุนูุฉ', 'ุญููุฉ ูุฏ ููุฌุจุฉ ุฎูููุฉ')
ON CONFLICT (name) DO NOTHING;

-- ุฅุฏุฑุงุฌ ุจุนุถ ุงูููุชุฌุงุช ุฅุฐุง ูู ุชูู ููุฌูุฏุฉ
INSERT INTO products (name, price, stock, description) VALUES
    ('ุจุฑูุชูู ูุงู', 45000, 20, 'ุจุฑูุชูู ูุงู ุนุงูู ุงูุฌูุฏุฉ - 2 ูููู'),
    ('ูุฑูุงุชูู', 25000, 15, 'ูุฑูุงุชูู ููููููุฏุฑุงุช - 300 ุฌุฑุงู'),
    ('ููุชุงูููุงุช ูุชุนุฏุฏุฉ', 15000, 30, 'ููุชุงูููุงุช ููุนุงุฏู ููููุฉ'),
    ('ุฒุฌุงุฌุฉ ููุงู ุฑูุงุถูุฉ', 5000, 50, 'ุฒุฌุงุฌุฉ ููุงู 750 ูู'),
    ('ููุงุฒุงุช ุฑูุงุถูุฉ', 8000, 25, 'ููุงุฒุงุช ููุชูุฑูู - ููุงุณุงุช ูุฎุชููุฉ')
ON CONFLICT (name) DO NOTHING;

-- ============================================================
-- 8. ุงูุชุญูู ูู ูุฌุงุญ ุงูุฅูุดุงุก
-- ============================================================

-- ูุญุต ุงูุฌุฏุงูู ุงูููุดุฃุฉ
SELECT 
    'ูุญุต ุงูุฌุฏุงูู ุงูููุดุฃุฉ:' as info,
    table_name,
    CASE 
        WHEN table_name IN ('subscribers', 'course_points', 'diet_items', 'products', 'sales', 'groups', 'group_items', 'sale_items') 
        THEN 'โ ููุฌูุฏ' 
        ELSE 'โ ููููุฏ' 
    END as status
FROM information_schema.tables 
WHERE table_schema = 'public' 
    AND table_name IN ('subscribers', 'course_points', 'diet_items', 'products', 'sales', 'groups', 'group_items', 'sale_items')
ORDER BY table_name;

-- ูุญุต ุงูุฃุนูุฏุฉ ุงููุถุงูุฉ
SELECT 
    'ูุญุต ุงูุฃุนูุฏุฉ:' as info,
    table_name,
    column_name,
    data_type,
    'โ ููุฌูุฏ' as status
FROM information_schema.columns 
WHERE table_schema = 'public' 
    AND ((table_name = 'subscribers' AND column_name = 'subscription_date')
         OR (table_name = 'products' AND column_name = 'stock'))
ORDER BY table_name, column_name;

-- ุนุฏุฏ ุงูุจูุงูุงุช ูู ูู ุฌุฏูู
SELECT 
    'ุฅุญุตุงุฆูุงุช ุงูุจูุงูุงุช:' as info,
    'course_points' as table_name,
    COUNT(*) as count
FROM course_points
UNION ALL
SELECT '', 'diet_items', COUNT(*) FROM diet_items
UNION ALL
SELECT '', 'products', COUNT(*) FROM products
UNION ALL
SELECT '', 'subscribers', COUNT(*) FROM subscribers
UNION ALL
SELECT '', 'groups', COUNT(*) FROM groups
UNION ALL
SELECT '', 'group_items', COUNT(*) FROM group_items;

-- ============================================================
-- ุฑุณุงูุฉ ุงููุฌุงุญ
-- ============================================================

DO $$
BEGIN
    RAISE NOTICE 'โ ุชู ุฅุตูุงุญ ูุดููุฉ ุงูุฃูุธูุฉ ุจูุฌุงุญ!';
    RAISE NOTICE '๐ ุชู ุฅูุดุงุก ุฌุฏุงูู ุงููุฌููุนุงุช';
    RAISE NOTICE '๐ง ุชู ุฅุถุงูุฉ ุงูุฃุนูุฏุฉ ุงูููููุฏุฉ';
    RAISE NOTICE 'โก ุชู ุฅูุดุงุก ุงูููุงุฑุณ ูุงููุญูุฒุงุช';
    RAISE NOTICE '๐ ุชู ุฅุฏุฑุงุฌ ุงูุจูุงูุงุช ุงูุชุฌุฑูุจูุฉ';
    RAISE NOTICE '๐ ุงููุธุงู ุฌุงูุฒ ูุญูุธ ุงูุฃูุธูุฉ ูุน ุงููุดุชุฑููู!';
    RAISE NOTICE '';
    RAISE NOTICE '๐ก ุงูุขู ููููู:';
    RAISE NOTICE '   โข ุฅุถุงูุฉ ูุดุชุฑู ูุน ุจุฑุงูุฌ ุชุฏุฑูุจูุฉ';
    RAISE NOTICE '   โข ุฅุถุงูุฉ ูุดุชุฑู ูุน ุฃูุธูุฉ ุบุฐุงุฆูุฉ';
    RAISE NOTICE '   โข ุนุฑุถ ุชูุงุตูู ุงููุดุชุฑู ูุน ุงูุฃูุธูุฉ';
    RAISE NOTICE '   โข ุทุจุงุนุฉ ุจูุงูุงุช ุงููุดุชุฑู ูุน ุงูุฃูุธูุฉ';
    RAISE NOTICE '   โข ุชุนุฏูู ุฃูุธูุฉ ุงููุดุชุฑู';
END $$;
