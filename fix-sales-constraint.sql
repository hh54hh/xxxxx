-- ===============================================
-- ุฅุตูุงุญ ููุฏ ุงููุจูุนุงุช ูุชูุธูู ุงูุจูุงูุงุช
-- Fix Sales Constraint and Clean Data
-- ===============================================

-- 1. ุฅุตูุง๏ฟฝ๏ฟฝ ุงููุจูุนุงุช ุงูุชู ูุฏููุง subscriber_id = null ู customer_name = null
UPDATE sales 
SET customer_name = 'ุฒุจูู ุณุงุจู'
WHERE subscriber_id IS NULL 
  AND (customer_name IS NULL OR customer_name = '');

-- 2. ุงูุชุญูู ูู ูุฌูุฏ ูุจูุนุงุช ูุน ูุดุชุฑููู ูุญุฐูููู
UPDATE sales 
SET customer_name = COALESCE(
  (SELECT name FROM subscribers WHERE id = sales.subscriber_id), 
  'ูุดุชุฑู ูุญุฐูู'
),
subscriber_id = NULL
WHERE subscriber_id IS NOT NULL 
  AND NOT EXISTS (
    SELECT 1 FROM subscribers WHERE id = sales.subscriber_id
  );

-- 3. ุงูุชุฃูุฏ ูู ุฃู ุฌููุน ุงููุจูุนุงุช ุชุญุชุฑู ุงูููุฏ
SELECT 
  'ูุญุต ููุฏ ุงููุจูุนุงุช:' as info,
  COUNT(*) as total_sales,
  COUNT(CASE WHEN subscriber_id IS NOT NULL AND customer_name IS NULL THEN 1 END) as with_subscriber,
  COUNT(CASE WHEN subscriber_id IS NULL AND customer_name IS NOT NULL THEN 1 END) as with_customer_name,
  COUNT(CASE WHEN subscriber_id IS NULL AND customer_name IS NULL THEN 1 END) as invalid_sales
FROM sales;

-- 4. ุฅูุดุงุก ุฏุงูุฉ ูุญุฐู ุงููุดุชุฑู ุจุฃูุงู
CREATE OR REPLACE FUNCTION safe_delete_subscriber(subscriber_id_param UUID)
RETURNS VOID AS $$
DECLARE
  subscriber_name TEXT;
  sales_count INTEGER;
BEGIN
  -- ุงูุญุตูู ุนูู ุงุณู ุงููุดุชุฑู
  SELECT name INTO subscriber_name
  FROM subscribers 
  WHERE id = subscriber_id_param;
  
  IF subscriber_name IS NULL THEN
    RAISE EXCEPTION 'ุงููุดุชุฑู ุบูุฑ ููุฌูุฏ: %', subscriber_id_param;
  END IF;
  
  -- ุชุญุฏูุซ ุงููุจูุนุงุช ุงููุฑุชุจุทุฉ
  UPDATE sales 
  SET subscriber_id = NULL,
      customer_name = subscriber_name
  WHERE subscriber_id = subscriber_id_param;
  
  GET DIAGNOSTICS sales_count = ROW_COUNT;
  
  IF sales_count > 0 THEN
    RAISE NOTICE 'ุชู ุชุญุฏูุซ % ูุจูุนุฉ ููุตููุง ุนู ุงููุดุชุฑู', sales_count;
  END IF;
  
  -- ุญุฐู ุงููุฌููุนุงุช ุงููุฑุชุจุทุฉ
  DELETE FROM groups WHERE subscriber_id = subscriber_id_param;
  
  -- ุญุฐู ุงููุดุชุฑู
  DELETE FROM subscribers WHERE id = subscriber_id_param;
  
  RAISE NOTICE 'ุชู ุญุฐู ุงููุดุชุฑู % ุจูุฌุงุญ', subscriber_name;
END;
$$ LANGUAGE plpgsql;

-- 5. ุฅูุดุงุก ุฏุงูุฉ ููุชุญูู ูู ุณูุงูุฉ ุงูุจูุงูุงุช
CREATE OR REPLACE FUNCTION check_sales_integrity()
RETURNS TABLE (
  issue_type TEXT,
  count BIGINT,
  description TEXT
) AS $$
BEGIN
  -- ูุญุต ุงููุจูุนุงุช ุจุฏูู ูุดุชุฑู ุฃู ุงุณู ุฒุจูู
  RETURN QUERY
  SELECT 
    'invalid_sales'::TEXT,
    COUNT(*),
    'ูุจูุนุงุช ุจุฏูู ูุดุชุฑู ุฃู ุงุณู ุฒุจูู'::TEXT
  FROM sales 
  WHERE subscriber_id IS NULL AND (customer_name IS NULL OR customer_name = '');
  
  -- ูุญุต ุงููุจูุนุงุช ูุน ูุดุชุฑููู ุบูุฑ ููุฌูุฏูู
  RETURN QUERY
  SELECT 
    'orphaned_sales'::TEXT,
    COUNT(*),
    'ูุจูุนุงุช ูุน ูุดุชุฑููู ูุญุฐูููู'::TEXT
  FROM sales s
  WHERE s.subscriber_id IS NOT NULL 
    AND NOT EXISTS (SELECT 1 FROM subscribers WHERE id = s.subscriber_id);
  
  -- ูุญุต ุงููุฌููุนุงุช ูุน ูุดุชุฑููู ุบูุฑ ููุฌูุฏูู
  RETURN QUERY
  SELECT 
    'orphaned_groups'::TEXT,
    COUNT(*),
    'ูุฌููุนุงุช ูุน ูุดุชุฑููู ูุญุฐูููู'::TEXT
  FROM groups g
  WHERE NOT EXISTS (SELECT 1 FROM subscribers WHERE id = g.subscriber_id);
END;
$$ LANGUAGE plpgsql;

-- 6. ุชูุธูู ุงููุฌููุนุงุช ุงููุชููุฉ
DELETE FROM groups 
WHERE NOT EXISTS (
  SELECT 1 FROM subscribers WHERE id = groups.subscriber_id
);

-- 7. ูุญุต ุงููุชุงุฆุฌ ุงูููุงุฆูุฉ
SELECT * FROM check_sales_integrity();

-- ุฑุณุงูุฉ ุงููุฌุงุญ
DO $$
BEGIN
  RAISE NOTICE 'โ ุชู ุฅุตูุงุญ ููุฏ ุงููุจูุนุงุช ุจูุฌุงุญ!';
  RAISE NOTICE '๐ง ุชู ุฅูุดุงุก ุฏุงูุฉ safe_delete_subscriber()';
  RAISE NOTICE '๐ ุชู ุฅูุดุงุก ุฏุงูุฉ check_sales_integrity()';
  RAISE NOTICE '๐งน ุชู ุชูุธูู ุงูุจูุงูุงุช ุงููุชููุฉ';
  RAISE NOTICE '๐ ููููู ุงูุขู ุญุฐู ุงููุดุชุฑููู ุจุฃูุงู';
END $$;
